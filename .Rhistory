return (index)
}
B<-c()
for(i in 1:length(H)){
B[i]<-b(H[i])
}
B[is.na(B)]<-0
print(2^max(B))
x<-c("Hello","world","Ralph","Internet","Hello","Hey")
x<-as.numeric(as.factor(x))
print(x)
h<-function(var){
return ((6*var+1) %% 5)
}
H<-c()
for(i in 1:length(x)){
H[i]<-h(x[i])
}
b<-function(var){
l1 = rev(as.numeric(intToBits(var)))
index <- match(1, l1) - 1
return (index)
}
B<-c()
for(i in 1:length(H)){
B[i]<-b(H[i])
}
B[is.na(B)]<-0
print(2^max(B))
x<-c("Hello","world","Ralph","Internet","Hello","Hey")
x<-as.numeric(as.factor(x))
print(x)
h<-function(var){
return ((6*var+1) %% 5)
}
H<-c()
for(i in 1:length(x)){
H[i]<-h(x[i])
}
b<-function(var){
l1 = rev(as.numeric(intToBits(var)))
l1 = tail(l1, 16)
index <- match(1, l1) - 1
return (index)
}
B<-c()
for(i in 1:length(H)){
B[i]<-b(H[i])
}
B[is.na(B)]<-0
print(2^max(B))
stream <- c(1, 2, 3, 5, 9, 2, 3, 8, 10, 16, 19)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * i + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * i + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * i + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * i + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 15)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 15)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 32)
stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 32)
# stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 32)
# stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 32)
# stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 32)
# stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 2, 3, 5, 9, 3, 5, 2, 1, 3, 7, 10, 11, 12, 13, 14, 8)
# stream <- as.numeric(as.factor(stream))
print(stream)
# Returns the number of trailing zeroes
b <- function(x) {
num = as.numeric(intToBits(x))
index <- match(1, num) - 1
return(index)
}
# Step 1: Calculate the hash values
H <- c()
for(i in 1:length(stream)){
H[i] <- ((6 * stream[i] + 1) %% 5)
}
# Step 2: Count number of trailing zeroes in binary representation
B <- c()
for(i in 1:length(H)){
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b <- function(x) {
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
H <- c()
for(i in 1:length(stream)) {
H[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b <- function(x) {
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
H <- c()
for(i in 1:length(stream)) {
H[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(H[i])
}
B[is.na(B)] <- 0
print(B)
print(2 ^ max(B))
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b = function(x){
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:len(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:len(stream)) {
B[i] <- b(h[i])
}
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b = function(x){
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b = function(x){
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
B[is.na(B)] <- 0
B
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
b = function(x){
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
B[is.na(B)] <- 0
print(2 ^ max(B))
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
print(stream)
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
b <- function(x) {
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
b <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
B
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
b <- function(x) {
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
B
stream <- c(1, 5, 3, 4, 1, 3, 4, 5, 1, 3, 4, 5, 1, 1, 5, 4, 3, 4)
stream <- as.numeric(as.factor(stream))
b <- function(x) {
num = as.numeric(intToBits(x))
index = match(1, num) - 1
return(index)
}
h <- c()
for(i in 1:length(stream)) {
h[i] <- ((6 * stream[i] + 1) %% 5)
}
B <- c()
for(i in 1:length(stream)) {
B[i] <- b(h[i])
}
B[is.na(B)] <- 0
print(2 ^ max(B))
