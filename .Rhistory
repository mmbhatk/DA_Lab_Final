data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = glm(default ~ student + balance + income, data = train, family = binomial)
summary(model)
model
pred.prob_train = predict(model, type = "response")
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test, type = "response")
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
pred.prob_train = predict(model, type = "response")
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test, type = "response")
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
model = lda(default ~ student + balance + income, data = train)
library(MASS)
library(ggplot2)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
pred.prob_train = predict(model, type = "response")
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test, type = "response")
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
library(MASS)
library(ggplot2)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
pred.prob_train = predict(model, type = "response")
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = predict(model, type = "response")
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = predict(model, type = "response")
pred.prob_train
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = glm(default ~ student + balance + income, data = train, family = binomial)
summary(model)
model
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test)
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
library(MASS)
library(ggplot2)
data = read.csv("8.csv")
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6*nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
attach(data)
attach(train)
attach(test)
model = qda(default ~ student + balance + income, data = train)
model
summary(model)
pred1 = predict(model, data = train)
table(pred1$class, default)
pred2 = predict(model, newdata = test)
table(pred2$class, default)
model
par(mfrow = c(1,1))
plot(model$x[,1], model$class, col=test$default)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = glm(default ~ student + balance + income, data = train, family = binomial)
summary(model)
model
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test)
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
model = lda(default ~ student + balance + income, data = train)
pred.prob_train = predict(model, data = train)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
pred.prob_train = predict(model, data = train)
pred.prob_train
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
pred.prob_train = predict(model, data = train)
pred.prob_train
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
pred.prob_train
dim(pred.prob_train)
length(pred.prob_train)
length(data)
dim(data)
data = read.csv("7.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
data = read.csv("7.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
summary(model)
model
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
length(pred.prob_train)
dim(data)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
dim(data)
dim(train)
dim(test)
pred.prob_train = predict(model, data = train)
length(pred.prob_train)
dim(pred.prob_train)
length(pred.prob_train)
library(MASS)
library(ggplot2)
data = read.csv("7.csv")
dim(data)
str(data)
summary(data)
attach(data)
data
set.seed(1)
row.number = sample(1:nrow(data),0.6*nrow(data))
row.number
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
attach(train)
model2 = lda(default~student+balance+income,data=train)
model2
summary(model2)
attach(train)
pred1 = predict(model2,data = train)
table(pred1$class,default)
attach(test)
pred2 = predict(model2,newdata = test)
pred2
table(pred2$class,default)
ldahist(pred1$x[,1], g= pred1$class)
par(mfrow=c(1,1))
plot(pred2$x[,1], pred2$class, col=test$default)
library(MASS)
library(ggplot2)
data = read.csv("7.csv")
dim(data)
str(data)
summary(data)
attach(data)
data
pred1 = predict(model, data = train)
table(pred1$class, default)
library(MASS)
library(ggplot2)
data = read.csv("7.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
model
summary(model)
pred1 = predict(model, data = train)
pred1
table(pred1$class, data[row.number,]$default)
model = lda(default ~ student + balance + income, data = train)
pred1 = predict(model, data = train)
table(pred1$class, data[row.number,]$default)
pred2 = predict(model, newdata = test)
table(pred2$class, data[-row.number,]$default)
ldahist(pred1$x[,1], g= pred1$class)
ldahist(pred1, g= pred1$class)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = glm(default ~ student + balance + income, data = train, family = binomial)
summary(model)
model
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_test = predict(model, newdata = test)
pred.prob_test = ifelse(pred.prob_test > 0.5, 1, 0)
table(pred.prob_test, data[-row.number,]$default)
library(MASS)
library(ggplot2)
data = read.csv("8.csv")
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6*nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = qda(default ~ student + balance + income, data = train)
model
summary(model)
model = qda(default ~ student + balance + income, data = train)
pred.prob_train = predict(model, data = train)
table(pred.prob_train, data[row.number,]$default)
table(pred.prob_train, unlist(data[row.number,]$default))
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train
length(pred.prob_train)
dim(data)
library(MASS)
library(ggplot2)
data = read.csv("8.csv")
dim(data)
library(MASS)
library(ggplot2)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
model
summary(model)
pred.prob_train = predict(model, data = train)
table(pred.prob_train, data[row.number,]$default)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
dim(pred.prob_train)
length(pred.prob_train)
pred.prob_train = predict(model, data = train)
length(pred.prob_train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(pred.prob_train > 0.5, 1, 0)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
length(pred.prob_train)
pred.prob_train
pred.prob_train = predict(model, data = train)
head(pred.prob_train)
library(MASS)
library(ggplot2)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = lda(default ~ student + balance + income, data = train)
model
summary(model)
# What should be the output of LDA?
pred.prob_train = predict(model, data = train)
pred.prob_train = ifelse(unlist(pred.prob_train) > 0.5, 1, 0)
table(pred.prob_train, data[row.number,]$default)
length(pred.prob_train)
head(pred.prob_train)
pred.prob_test = predict(model, newdata = test)
table(pred.prob_test, data[-row.number,]$default)
model
par(mfrow = c(1,1))
plot(model$x[,1], model$class, col=test$default)
library(MASS)
library(ggplot2)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = qda(default ~ student + balance + income, data = train)
model
summary(model)
library(MASS)
library(ggplot2)
data = read.csv("6.csv")
data$default = gsub("No",0,data$default)
data$default = gsub("Yes",1,data$default)
data$student = gsub("No",0,data$student)
data$student = gsub("Yes",1,data$student)
data$default = as.integer(data$default)
data$student = as.integer(data$student)
head(data)
dim(data)
summary(data)
set.seed(1)
row.number = sample(1:nrow(data), 0.6 * nrow(data))
train = data[row.number,]
test = data[-row.number,]
dim(train)
dim(test)
model = qda(default ~ student + balance + income, data = train)
model
summary(model)
